<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="FourWheeledRobot">
   
   <gazebo reference="base_link">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="FLW_link">
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="FRW_link">
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="BLW_link">
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="BRW_link">
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="camera_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="lidar_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="ultrasonicF_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="ultrasonicB_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="spacer_BL">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="spacer_BR">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="spacer_FL">
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="spacer_FR">
        <material>Gazebo/Black</material>
    </gazebo>
    
    <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <robotNamespace>/</robotNamespace>
            <leftFrontJoint>FLW_joint</leftFrontJoint>
            <rightFrontJoint>FRW_joint</rightFrontJoint>
            <leftRearJoint>BLW_joint</leftRearJoint>
            <rightRearJoint>BRW_joint</rightRearJoint>
            <wheelSeparation>0.46</wheelSeparation>
            <wheelDiameter>0.2</wheelDiameter>
            <robotBaseFrame>base_link</robotBaseFrame>
            <torque>20</torque>
            <topicName>cmd_vel</topicName>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <broadcastTF>true</broadcastTF>
            <commandTopic>cmd_vel</commandTopic>
            <covariance_x>0.001000</covariance_x>
            <covariance_y>0.001000</covariance_y>
            <covariance_yaw>0.100000</covariance_yaw>
        </plugin>
    </gazebo>

    <!-- camera -->
    <gazebo reference="camera_link">
        <sensor type="camera" name="camera1">
            <!-- <pose>0 0 0 0 0 1.57</pose> -->
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.570796</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>400</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>/camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera1/camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- LIDAR -->
    <gazebo reference="lidar_link">
        <sensor type="ray" name="lidar_sensor">
            <pose>0 0 -0.015 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
                        achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                        stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                        reading. -->
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/scan</topicName>
                <frameName>lidar_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

     <!-- front ultrasonic Sensor -->
    <gazebo reference="ultrasonicF_link">
        <!-- Define a sensor of type "ray" with the name "sonar" -->
        <sensor type="ray" name="sonar">
            <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
            <pose>0 0 0 0 0 0</pose>
            <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
            <visualize>true</visualize>
            <!-- Set the update rate for the sensor in Hz (how often it updates) -->
            <update_rate>5</update_rate>
            <!-- Define the ray properties of the sensor -->
            <ray>
                <!-- Define the scan parameters for the sensor -->
                <scan>
                    <horizontal>
                        <!-- Number of horizontal samples (rays) per scan -->
                        <samples>5</samples>
                        <!-- Resolution of the scan (how fine the angular increments are) -->
                        <resolution>1.0</resolution>
                        <!-- Minimum angle for the horizontal scan in radians -->
                        <min_angle>-0.18</min_angle>
                        <!-- Maximum angle for the horizontal scan in radians -->
                        <max_angle>0.18</max_angle>
                    </horizontal>

                    <vertical>
                        <!-- Number of vertical samples (rays) per scan -->
                        <samples>5</samples>
                        <!-- Resolution of the vertical scan -->
                        <resolution>1</resolution>
                        <!-- Minimum angle for the vertical scan in radians -->
                        <min_angle>-0.035</min_angle>
                        <!-- Maximum angle for the vertical scan in radians -->
                        <max_angle>0.035</max_angle>
                    </vertical>
                </scan>

                <!-- Define the range properties of the sensor -->
                <range>
                    <!-- Minimum distance the sensor can measure -->
                    <min>0.01</min>
                    <!-- Maximum distance the sensor can measure -->
                    <max>4</max>
                    <!-- Resolution of the distance measurements -->
                    <resolution>0.01</resolution>
                </range>
            </ray>

            <!-- Attach a Gazebo plugin for interfacing with ROS -->
            <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
                <!-- Gaussian noise added to the sensor readings -->
                <gaussianNoise>0.005</gaussianNoise>
                <!-- Always keep the sensor active -->
                <alwaysOn>true</alwaysOn>
                <!-- Update rate for the sensor in Hz -->
                <updateRate>30</updateRate>
                <!-- ROS topic name where the sensor data will be published -->
                <topicName>/ultrasonic1</topicName>
                <!-- Frame name for the sensor, used for transformations -->
                <frameName>ultrasonicF_link</frameName>
                <!-- Field of view of the sensor in radians -->
                <fov>0.5</fov>
                <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
                <radiation>ultrasound</radiation>
            </plugin>
        </sensor>
    </gazebo>



     <!-- front ultrasonic Sensor -->
    <gazebo reference="ultrasonicB_link">
        <!-- Define a sensor of type "ray" with the name "sonar" -->
        <sensor type="ray" name="sonar">
            <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
            <pose>0 0 0 0 0 3.14</pose>
            <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
            <visualize>true</visualize>
            <!-- Set the update rate for the sensor in Hz (how often it updates) -->
            <update_rate>5</update_rate>
            <!-- Define the ray properties of the sensor -->
            <ray>
                <!-- Define the scan parameters for the sensor -->
                <scan>
                    <horizontal>
                        <!-- Number of horizontal samples (rays) per scan -->
                        <samples>5</samples>
                        <!-- Resolution of the scan (how fine the angular increments are) -->
                        <resolution>1.0</resolution>
                        <!-- Minimum angle for the horizontal scan in radians -->
                        <min_angle>-0.18</min_angle>
                        <!-- Maximum angle for the horizontal scan in radians -->
                        <max_angle>0.18</max_angle>
                    </horizontal>

                    <vertical>
                        <!-- Number of vertical samples (rays) per scan -->
                        <samples>5</samples>
                        <!-- Resolution of the vertical scan -->
                        <resolution>1</resolution>
                        <!-- Minimum angle for the vertical scan in radians -->
                        <min_angle>-0.035</min_angle>
                        <!-- Maximum angle for the vertical scan in radians -->
                        <max_angle>0.035</max_angle>
                    </vertical>
                </scan>

                <!-- Define the range properties of the sensor -->
                <range>
                    <!-- Minimum distance the sensor can measure -->
                    <min>0.01</min>
                    <!-- Maximum distance the sensor can measure -->
                    <max>4</max>
                    <!-- Resolution of the distance measurements -->
                    <resolution>0.01</resolution>
                </range>
            </ray>

            <!-- Attach a Gazebo plugin for interfacing with ROS -->
            <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
                <!-- Gaussian noise added to the sensor readings -->
                <gaussianNoise>0.005</gaussianNoise>
                <!-- Always keep the sensor active -->
                <alwaysOn>true</alwaysOn>
                <!-- Update rate for the sensor in Hz -->
                <updateRate>30</updateRate>
                <!-- ROS topic name where the sensor data will be published -->
                <topicName>/ultrasonic2</topicName>
                <!-- Frame name for the sensor, used for transformations -->
                <frameName>ultrasonicB_link</frameName>
                <!-- Field of view of the sensor in radians -->
                <fov>0.5</fov>
                <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
                <radiation>ultrasound</radiation>
            </plugin>
        </sensor>
    </gazebo>

</robot>